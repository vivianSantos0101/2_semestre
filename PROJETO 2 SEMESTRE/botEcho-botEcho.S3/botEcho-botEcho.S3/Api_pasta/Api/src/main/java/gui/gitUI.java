/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Base64;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrador
 */
public class gitUI extends javax.swing.JPanel {
    private String token;
    

    /**
     * Creates new form gitUI
     */
    public gitUI() {
        initComponents();
        File tokenFile = new File(System.getProperty("user.home") + File.separator + ".github_token");
        if (tokenFile.exists()) {
            try {
                String encodedToken = Files.readString(Path.of(System.getProperty("user.home") + File.separator + ".github_token"));
                this.token = new String(Base64.getDecoder().decode(encodedToken));
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Erro ao ler token salvo: " + e.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Procurar = new javax.swing.JButton();
        tokenCaminho = new javax.swing.JTextField();
        usuariogit = new javax.swing.JTextField();
        emailgit = new javax.swing.JTextField();
        nomerep = new javax.swing.JTextField();
        commit = new javax.swing.JTextField();
        caminhoArquivo = new javax.swing.JTextField();
        salvarToken = new javax.swing.JButton();
        Executar = new javax.swing.JButton();
        branch = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        setBackground(new java.awt.Color(45, 45, 45));
        setForeground(java.awt.Color.blue);

        jLabel1.setBackground(new java.awt.Color(60, 60, 60));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Digite seu Token:");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Digite o nome do GitHub: ");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Digite seu email do GitHub:");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Digite o nome do repositorio do GitHub:");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Digite a mensagem do Commit: ");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Escolha o caminho da pasta:");

        Procurar.setBackground(new java.awt.Color(60, 60, 60));
        Procurar.setForeground(new java.awt.Color(255, 255, 255));
        Procurar.setText("Procurar");
        Procurar.setBorderPainted(false);
        Procurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcurarActionPerformed(evt);
            }
        });

        tokenCaminho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tokenCaminhoActionPerformed(evt);
            }
        });

        salvarToken.setBackground(new java.awt.Color(60, 60, 60));
        salvarToken.setForeground(new java.awt.Color(255, 255, 255));
        salvarToken.setText("Salvar Token");
        salvarToken.setBorderPainted(false);
        salvarToken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarTokenActionPerformed(evt);
            }
        });

        Executar.setBackground(new java.awt.Color(60, 60, 60));
        Executar.setForeground(new java.awt.Color(255, 255, 255));
        Executar.setText("Executar");
        Executar.setBorderPainted(false);
        Executar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExecutarActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Branch:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(commit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailgit, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomerep, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tokenCaminho, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(salvarToken)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Executar, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(branch, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(Procurar)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(usuariogit, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6)
                                    .addComponent(caminhoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(18, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tokenCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(salvarToken))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(usuariogit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(caminhoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addComponent(jLabel3))
                    .addComponent(Procurar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailgit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomerep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(branch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(commit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Executar))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tokenCaminho.getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void ProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcurarActionPerformed
               javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);
        int result = fileChooser.showOpenDialog(this);
        File caminho = fileChooser.getSelectedFile();
        if (result == JFileChooser.APPROVE_OPTION) {
            caminhoArquivo.setText(caminho.getAbsolutePath());
        }
    }//GEN-LAST:event_ProcurarActionPerformed

    private void tokenCaminhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tokenCaminhoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tokenCaminhoActionPerformed

    private void salvarTokenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarTokenActionPerformed
        String tokenCaminho = System.getProperty("user.home") + File.separator + ".github_token"; 

        File tokenFile = new File(tokenCaminho);
        if (tokenFile.exists()) {
            try {
                String encodedToken = Files.readString(Path.of(tokenCaminho));
                   this.token = new String(Base64.getDecoder().decode(encodedToken));
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Erro ao ler token salvo: " + e.getMessage());
            }
        }

        String novoToken = this.tokenCaminho.getText();
        if (novoToken != null && !novoToken.trim().isEmpty()) {
            try {
                String encoded = Base64.getEncoder().encodeToString(novoToken.getBytes());
                Files.write(Path.of(tokenCaminho), encoded.getBytes());
                this.token = novoToken;
            }catch(IOException e){
                JOptionPane.showMessageDialog(null, "Erro ao ler token salvo: " + e.getMessage());
                
            }
        }  
         JOptionPane.showMessageDialog(null, "Token salvo com sucesso!");
    }//GEN-LAST:event_salvarTokenActionPerformed
public static void executarComando(String comando, String diretorio) throws IOException, InterruptedException {
        ProcessBuilder builder = new ProcessBuilder();
        builder.command("cmd.exe", "/c", comando);
        builder.directory(new File(diretorio));
        builder.redirectErrorStream(true);
        Process processo = builder.start();

        BufferedReader reader = new BufferedReader(new InputStreamReader(processo.getInputStream()));
        String linha;
        System.out.println("Comando executado: " + comando);
        while ((linha = reader.readLine()) != null) {
            System.out.println("Saída: " + linha);
        }

        int exitCode = processo.waitFor();
        if (exitCode != 0) {
            throw new RuntimeException("Falha no comando: " + comando);
        }
    }

    private void ExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExecutarActionPerformed
        String remoteUrl = "https://" + this.token + "@github.com/" + usuariogit.getText() + "/" + nomerep.getText() + ".git";
        String caminhoArquivostr = caminhoArquivo.getText();
        try {
            executarComando("git remote remove origin", caminhoArquivostr);
        } catch (Exception ignored) {}

        try {
            executarComando("git remote add origin " + remoteUrl, caminhoArquivo.getText());
            executarComando("git config user.name \"" + usuariogit.getText() + "\"", caminhoArquivo.getText());
            executarComando("git config user.email \"" + emailgit.getText() + "\"", caminhoArquivo.getText());
            executarComando("git fetch origin", caminhoArquivo.getText());
            executarComando("git add .", caminhoArquivo.getText());
            executarComando("git commit -m \"" + commit.getText() + "\"", caminhoArquivo.getText());
            executarComando("git checkout "+branch.getText(), caminhoArquivo.getText());
            executarComando("git branch -a", caminhoArquivo.getText());
            executarComando("git push -u origin "+branch.getText(), caminhoArquivo.getText());
            JOptionPane.showMessageDialog(null, "Commit e push realizados com sucesso!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e.getMessage());         
}
    }//GEN-LAST:event_ExecutarActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Executar;
    private javax.swing.JButton Procurar;
    private javax.swing.JTextField branch;
    private javax.swing.JTextField caminhoArquivo;
    private javax.swing.JTextField commit;
    private javax.swing.JTextField emailgit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField nomerep;
    private javax.swing.JButton salvarToken;
    private javax.swing.JTextField tokenCaminho;
    private javax.swing.JTextField usuariogit;
    // End of variables declaration//GEN-END:variables
}
